#include <libevm-gas-exploiter/Utils.h>

#include <gtest/gtest.h>

using namespace dev;

namespace
{
std::vector<double> values = {0.2, 0.1, 0.3, 0.5, 0.05};
}


TEST(Utils, keyIntersection)
{
    std::map<int, char> m1 = {{1, 'a'}, {3, 'b'}, {5, 'c'}, {7, 'd'}};
    std::map<int, char> m2 = {{3, 'a'}, {7, 'b'}, {9, 'c'}};
    auto intersection = keyIntersection(m1, m2);
    ASSERT_EQ(intersection.size(), 2);
    EXPECT_EQ(intersection[0], 3);
    EXPECT_EQ(intersection[1], 7);
}

TEST(Utils, sum)
{
    ASSERT_FLOAT_EQ(math::sum(values.begin(), values.end()), 1.15);
}

TEST(Utils, mean)
{
    ASSERT_FLOAT_EQ(math::mean(values.begin(), values.end()), 0.23);
}

TEST(Utils, variance)
{
    ASSERT_FLOAT_EQ(math::variance(values.begin(), values.end()), 0.0256);
}

TEST(Utils, stdev)
{
    ASSERT_FLOAT_EQ(math::stdev(values.begin(), values.end()), 0.16);
}

TEST(Utils, median)
{
    std::vector<double> oddSized = values;
    ASSERT_FLOAT_EQ(math::constMedian(oddSized.begin(), oddSized.end()), 0.2);

    std::vector<double> evenSized = {0.2, 0.1, 0.3, 0.5, 0.05, 0.6};
    ASSERT_FLOAT_EQ(math::constMedian(evenSized.begin(), evenSized.end()), 0.25);
}
