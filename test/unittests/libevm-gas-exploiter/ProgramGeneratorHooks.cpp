#include <libevm-gas-exploiter/ProgramGeneratorHooks.h>

#include <gtest/gtest.h>

using namespace dev;
using namespace eth;


TEST(ProgramGeneratorHooks, FixMemoryHook)
{
    Program program;
    program.addInstruction(Instruction::PUSH10, ProgramData(0xff00ff, 10));
    program.addInstruction(Instruction::PUSH8, ProgramData(0xff1234, 8));
    program.addInstruction(Instruction::PUSH4, ProgramData(0xff1122, 4));


    FixMemoryHook fixMemoryHook;

    auto addInstr = std::make_shared<ProgramInstruction>(Instruction::BALANCE);
    fixMemoryHook.execute(program, addInstr);
    EXPECT_FALSE(addInstr->isProtected());
    EXPECT_EQ(program.size(), 3);

    auto callDataInstr = std::make_shared<ProgramInstruction>(Instruction::CALLDATACOPY);

    fixMemoryHook.execute(program, callDataInstr);
    EXPECT_TRUE(callDataInstr->isProtected());
    EXPECT_EQ(program.size(), 9);
    auto& instructions = program.instructions();

    for (size_t i = 0; i < instructions.size(); i++)
    {
        if (i < 3)
        {
            ASSERT_FALSE(instructions[i]->isProtected());
        }
        else
        {
            ASSERT_TRUE(instructions[i]->isProtected());
        }
    }
}