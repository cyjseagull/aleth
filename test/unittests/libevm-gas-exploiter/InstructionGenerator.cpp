#include <libevm-gas-exploiter/InstructionGenerator.h>

#include <gtest/gtest.h>

using namespace dev;
using namespace eth;


TEST(InstructionGenerator, generateMemorySafeSequence)
{
    auto addInstr = std::make_shared<ProgramInstruction>(Instruction::BALANCE);
    auto instrs = generateMemorySafeSequence(addInstr);
    EXPECT_FALSE(addInstr->isProtected());
    EXPECT_EQ(instrs.size(), 1);

    auto callDataInstr = std::make_shared<ProgramInstruction>(Instruction::CALLDATACOPY);
    instrs = generateMemorySafeSequence(callDataInstr);
    EXPECT_TRUE(callDataInstr->isProtected());
    EXPECT_EQ(instrs.size(), 7);
    for (const auto& instr : instrs)
    {
        ASSERT_TRUE(instr->isProtected());
    }
}