#pragma once

#include <libethereum/Block.h>
#include <libethereum/BlockChain.h>
#include <libethereum/State.h>

#include <memory>

#include <json/json.h>

namespace dev
{
namespace eth
{


struct ExecutionEnv
{
    Block block;
    BlockHeader blockHeader;
    u256 value;
    u256 gasPrice;
    u256 gas;
    Address sender;
    Address origin;
    std::shared_ptr<BlockChain> chain;
};

struct ExecutionStats
{
    u256 gasUsed;
    float executionTime;
    bytes output;
    TransactionException excepted;
};

struct ExecutionAggregatedStats
{
    uint64_t gas;
    uint64_t execCount;
    double totalTime;
    double gasPerSecond;
    double timeMean;
    double timeStdev;
    std::vector<double> measurements;

    Json::Value toJson() const;
};

}
}