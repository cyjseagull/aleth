#include "InstructionMetadata.h"

#include <fstream>
#include <json/json.h>

namespace dev
{
namespace eth
{


std::vector<InstructionMetadata> parseInstructionsFromFile(const std::string& filepath)
{
    std::ifstream ifs(filepath);
    Json::Value root;
    ifs >> root;

    std::vector<InstructionMetadata> instructionsMetadata;

    auto stats = root["stats"];

    for (auto itr = stats.begin(); itr != stats.end(); itr++)
    {
        auto instruction = instructionFromName(itr.key().asString());
        if (instruction == Instruction::INVALID)
        {
            continue;
        }
        InstructionMetadata metadata = InstructionMetadata {
            .instruction = instruction,
            .executedCount = root["count"].asUInt64(),
            .executionTimeMean = root["mean"].asDouble(),
            .executionTimeStdev = root["stdev"].asDouble()
        };
        instructionsMetadata.push_back(metadata);
    }

    return instructionsMetadata;
}

}
}